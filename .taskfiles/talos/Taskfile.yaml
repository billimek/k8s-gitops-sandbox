---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  generate-clusterconfig:
    desc: Generate clusterconfig for Talos
    preconditions:
      - which op test talhelper
      - test -f {{.SETUP_DIR}}/talos/talsecret.yaml
      - test -f {{.SETUP_DIR}}/talos/talconfig.yaml
      - test -f {{.SETUP_DIR}}/talos/talhelper-secrets.env
      - op user get --me
    cmds:
      - op run --env-file {{.SETUP_DIR}}/talos/talhelper-secrets.env --no-masking -- talhelper genconfig
        --secret-file {{.SETUP_DIR}}/talos/talsecret.yaml
        --config-file {{.SETUP_DIR}}/talos/talconfig.yaml
        --out-dir {{.SETUP_DIR}}/talos/clusterconfig

  apply-clusterconfig:
    desc: Apply clusterconfig for a Talos cluster
    vars:
      CLUSTERCONFIG_FILES:
        sh: ls {{.SETUP_DIR}}/talos/clusterconfig/*.yaml
    preconditions:
      - which ls
      - test -f "${TALOSCONFIG}"
    cmds:
      - for:
          var: CLUSTERCONFIG_FILES
        task: _apply-machineconfig
        vars:
          FILENAME: "{{.ITEM}}"
          HOSTNAME: |-
            {{ trimPrefix (printf "home-") (base .ITEM) | trimSuffix ".yaml" }}
          DRY_RUN: "{{ .DRY_RUN }}"
          INSECURE: "{{ .INSECURE }}"

  apply-node:
    desc: Apply Talos config to a node [NODE=required]
    preconditions:
      - which talosctl
      - test -f "${TALOSCONFIG}"
      - talosctl --nodes {{.NODE}} get machineconfig
    requires:
      vars:
        - NODE
    vars:
      FILE:
        sh: ls {{.SETUP_DIR}}/talos/clusterconfig/home-{{.NODE}}*.yaml
    cmds:
      - task: _apply-machineconfig
        vars:
          FILENAME: "{{.FILE}}"
          HOSTNAME: "{{.NODE}}"
      - talosctl --nodes {{.NODE}} health

  upgrade-node:
    desc: Upgrade Talos on a single node [NODE=required]
    preconditions:
      - which talosctl
      - test -f "${TALOSCONFIG}"
      - talosctl --nodes {{.NODE}} get machineconfig
    requires:
      vars:
        - NODE
    vars:
      FILE:
        sh: ls {{.SETUP_DIR}}/talos/clusterconfig/home-{{.NODE}}*.yaml
      TALOS_IMAGE:
        sh: yq '.machine.install.image' < "{{.FILE}}"
    cmds:
      - talosctl --nodes {{.NODE}} upgrade --image="{{.TALOS_IMAGE}}" --timeout=10m
      - talosctl --nodes {{.NODE}} health

  _apply-machineconfig:
    internal: true
    desc: Apply a single Talos machineConfig to a Talos node
    preconditions:
      - which talosctl
      - test -f "{{.FILENAME}}"
    requires:
      vars:
        - HOSTNAME
        - FILENAME
    vars:
      MODE: '{{.MODE | default "auto"}}'
    cmds:
      - talosctl apply-config
        --nodes "{{.HOSTNAME}}"
        --file "{{.FILENAME}}"
        --mode="{{.MODE}}"
        {{ if eq "true" .INSECURE }}--insecure{{ end }}
        {{ if eq "true" .DRY_RUN }}--dry-run{{ end }}